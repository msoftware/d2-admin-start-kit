{"remainingRequest":"C:\\Projekte\\vue-admin\\d2-admin-start-kit\\node_modules\\babel-loader\\lib\\index.js!C:\\Projekte\\vue-admin\\d2-admin-start-kit\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Projekte\\vue-admin\\d2-admin-start-kit\\src\\api\\modules\\sys.user.js","dependencies":[{"path":"C:\\Projekte\\vue-admin\\d2-admin-start-kit\\src\\api\\modules\\sys.user.js","mtime":1593434353478},{"path":"C:\\Projekte\\vue-admin\\d2-admin-start-kit\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projekte\\vue-admin\\d2-admin-start-kit\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Projekte\\vue-admin\\d2-admin-start-kit\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZmluZCwgYXNzaWduIH0gZnJvbSAnbG9kYXNoJzsKdmFyIHVzZXJzID0gW3sKICB1c2VybmFtZTogJ2FkbWluJywKICBwYXNzd29yZDogJ2FkbWluJywKICB1dWlkOiAnYWRtaW4tdXVpZCcsCiAgbmFtZTogJ0FkbWluJwp9LCB7CiAgdXNlcm5hbWU6ICdlZGl0b3InLAogIHBhc3N3b3JkOiAnZWRpdG9yJywKICB1dWlkOiAnZWRpdG9yLXV1aWQnLAogIG5hbWU6ICdFZGl0b3InCn0sIHsKICB1c2VybmFtZTogJ3VzZXIxJywKICBwYXNzd29yZDogJ3VzZXIxJywKICB1dWlkOiAndXNlcjEtdXVpZCcsCiAgbmFtZTogJ1VzZXIxJwp9XTsKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIChfcmVmKSB7CiAgdmFyIHNlcnZpY2UgPSBfcmVmLnNlcnZpY2UsCiAgICAgIHJlcXVlc3QgPSBfcmVmLnJlcXVlc3QsCiAgICAgIHNlcnZpY2VGb3JNb2NrID0gX3JlZi5zZXJ2aWNlRm9yTW9jaywKICAgICAgcmVxdWVzdEZvck1vY2sgPSBfcmVmLnJlcXVlc3RGb3JNb2NrLAogICAgICBtb2NrID0gX3JlZi5tb2NrLAogICAgICBmYWtlciA9IF9yZWYuZmFrZXIsCiAgICAgIHRvb2xzID0gX3JlZi50b29sczsKICByZXR1cm4gewogICAgLyoqDQogICAgICogQGRlc2NyaXB0aW9uIOeZu+W9lQ0KICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIOeZu+W9leaQuuW4pueahOS/oeaBrw0KICAgICAqLwogICAgU1lTX1VTRVJfTE9HSU46IGZ1bmN0aW9uIFNZU19VU0VSX0xPR0lOKCkgewogICAgICB2YXIgZGF0YSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307CiAgICAgIC8vIOaooeaLn+aVsOaNrgogICAgICBtb2NrLm9uQW55KCcvbG9naW4nKS5yZXBseShmdW5jdGlvbiAoY29uZmlnKSB7CiAgICAgICAgdmFyIHVzZXIgPSBmaW5kKHVzZXJzLCB0b29scy5wYXJzZShjb25maWcuZGF0YSkpOwogICAgICAgIHJldHVybiB1c2VyID8gdG9vbHMucmVzcG9uc2VTdWNjZXNzKGFzc2lnbih7fSwgdXNlciwgewogICAgICAgICAgdG9rZW46IGZha2VyLnJhbmRvbS51dWlkKCkKICAgICAgICB9KSkgOiB0b29scy5yZXNwb25zZUVycm9yKHt9LCAn6LSm5Y+35oiW5a+G56CB5LiN5q2j56GuJyk7CiAgICAgIH0pOyAvLyDmjqXlj6Por7fmsYIKCiAgICAgIHJldHVybiByZXF1ZXN0Rm9yTW9jayh7CiAgICAgICAgdXJsOiAnL2xvZ2luJywKICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICBkYXRhOiBkYXRhCiAgICAgIH0pOwogICAgfQogIH07Cn0pOw=="},{"version":3,"sources":["C:/Projekte/vue-admin/d2-admin-start-kit/src/api/modules/sys.user.js"],"names":["find","assign","users","username","password","uuid","name","service","request","serviceForMock","requestForMock","mock","faker","tools","SYS_USER_LOGIN","data","onAny","reply","config","user","parse","responseSuccess","token","random","responseError","url","method"],"mappings":"AAAA,SAASA,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AAEA,IAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,QAAQ,EAAE,OAAZ;AAAqBC,EAAAA,QAAQ,EAAE,OAA/B;AAAwCC,EAAAA,IAAI,EAAE,YAA9C;AAA4DC,EAAAA,IAAI,EAAE;AAAlE,CADY,EAEZ;AAAEH,EAAAA,QAAQ,EAAE,QAAZ;AAAsBC,EAAAA,QAAQ,EAAE,QAAhC;AAA0CC,EAAAA,IAAI,EAAE,aAAhD;AAA+DC,EAAAA,IAAI,EAAE;AAArE,CAFY,EAGZ;AAAEH,EAAAA,QAAQ,EAAE,OAAZ;AAAqBC,EAAAA,QAAQ,EAAE,OAA/B;AAAwCC,EAAAA,IAAI,EAAE,YAA9C;AAA4DC,EAAAA,IAAI,EAAE;AAAlE,CAHY,CAAd;AAMA,gBAAe;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,MAAYC,OAAZ,QAAYA,OAAZ;AAAA,MAAqBC,cAArB,QAAqBA,cAArB;AAAA,MAAqCC,cAArC,QAAqCA,cAArC;AAAA,MAAqDC,IAArD,QAAqDA,IAArD;AAAA,MAA2DC,KAA3D,QAA2DA,KAA3D;AAAA,MAAkEC,KAAlE,QAAkEA,KAAlE;AAAA,SAA+E;AAC5F;;;;AAIAC,IAAAA,cAL4F,4BAKjE;AAAA,UAAXC,IAAW,uEAAJ,EAAI;AACzB;AACAJ,MAAAA,IAAI,CACDK,KADH,CACS,QADT,EAEGC,KAFH,CAES,UAAAC,MAAM,EAAI;AACf,YAAMC,IAAI,GAAGnB,IAAI,CAACE,KAAD,EAAQW,KAAK,CAACO,KAAN,CAAYF,MAAM,CAACH,IAAnB,CAAR,CAAjB;AACA,eAAOI,IAAI,GACPN,KAAK,CAACQ,eAAN,CAAsBpB,MAAM,CAAC,EAAD,EAAKkB,IAAL,EAAW;AAAEG,UAAAA,KAAK,EAAEV,KAAK,CAACW,MAAN,CAAalB,IAAb;AAAT,SAAX,CAA5B,CADO,GAEPQ,KAAK,CAACW,aAAN,CAAoB,EAApB,EAAwB,UAAxB,CAFJ;AAGD,OAPH,EAFyB,CAUzB;;AACA,aAAOd,cAAc,CAAC;AACpBe,QAAAA,GAAG,EAAE,QADe;AAEpBC,QAAAA,MAAM,EAAE,MAFY;AAGpBX,QAAAA,IAAI,EAAJA;AAHoB,OAAD,CAArB;AAKD;AArB2F,GAA/E;AAAA,CAAf","sourcesContent":["import { find, assign } from 'lodash'\r\n\r\nconst users = [\r\n  { username: 'admin', password: 'admin', uuid: 'admin-uuid', name: 'Admin' },\r\n  { username: 'editor', password: 'editor', uuid: 'editor-uuid', name: 'Editor' },\r\n  { username: 'user1', password: 'user1', uuid: 'user1-uuid', name: 'User1' }\r\n]\r\n\r\nexport default ({ service, request, serviceForMock, requestForMock, mock, faker, tools }) => ({\r\n  /**\r\n   * @description 登录\r\n   * @param {Object} data 登录携带的信息\r\n   */\r\n  SYS_USER_LOGIN (data = {}) {\r\n    // 模拟数据\r\n    mock\r\n      .onAny('/login')\r\n      .reply(config => {\r\n        const user = find(users, tools.parse(config.data))\r\n        return user\r\n          ? tools.responseSuccess(assign({}, user, { token: faker.random.uuid() }))\r\n          : tools.responseError({}, '账号或密码不正确')\r\n      })\r\n    // 接口请求\r\n    return requestForMock({\r\n      url: '/login',\r\n      method: 'post',\r\n      data\r\n    })\r\n  }\r\n})\r\n"]}]}