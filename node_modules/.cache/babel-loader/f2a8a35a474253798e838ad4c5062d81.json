{"remainingRequest":"C:\\Projekte\\vue-admin\\d2-admin-start-kit\\node_modules\\babel-loader\\lib\\index.js!C:\\Projekte\\vue-admin\\d2-admin-start-kit\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Projekte\\vue-admin\\d2-admin-start-kit\\src\\store\\modules\\d2admin\\modules\\page.js","dependencies":[{"path":"C:\\Projekte\\vue-admin\\d2-admin-start-kit\\src\\store\\modules\\d2admin\\modules\\page.js","mtime":1593435051127},{"path":"C:\\Projekte\\vue-admin\\d2-admin-start-kit\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1592891886067},{"path":"C:\\Projekte\\vue-admin\\d2-admin-start-kit\\node_modules\\babel-loader\\lib\\index.js","mtime":1592891886030},{"path":"C:\\Projekte\\vue-admin\\d2-admin-start-kit\\node_modules\\eslint-loader\\index.js","mtime":1592891895300}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Projekte/vue-admin/d2-admin-start-kit/src/store/modules/d2admin/modules/page.js"],"names":["cloneDeep","uniq","get","router","setting","isKeepAlive","data","namespaced","state","pool","opened","openedLoaded","current","keepAlive","actions","isLoaded","Promise","resolve","timer","setInterval","clearInterval","openedLoad","commit","dispatch","dbName","path","defaultValue","page","user","root","value","valid","map","fullPath","push","find","item","name","Object","assign","filter","index","opened2db","openedUpdate","params","query","splice","openedSort","oldIndex","newIndex","add","tag","newTag","open","meta","pageOpendIndex","pageOpend","same","t","close","tagName","newPage","isCurrent","len","length","i","findIndex","routerObj","closeLeft","pageSelect","pageAim","currentIndex","forEach","app","$route","closeRight","closeOther","closeAll","mutations","keepAliveRefresh","e","keepAliveRemove","list","keepAlivePush","keep","keepAliveClean","currentSet","init","routes","route","children","hidden"],"mappings":"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","sourcesContent":["import { cloneDeep, uniq, get } from 'lodash'\r\nimport router from '@/router'\r\nimport setting from '@/setting.js'\r\n\r\n// 判定是否需要缓存\r\nconst isKeepAlive = data => get(data, 'meta.cache', false)\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    // 可以在多页 tab 模式下显示的页面\r\n    pool: [],\r\n    // 当前显示的多页面列表\r\n    opened: get(setting, 'page.opened', []),\r\n    // 已经加载多标签页数据 https://github.com/d2-projects/d2-admin/issues/201\r\n    openedLoaded: false,\r\n    // 当前页面\r\n    current: '',\r\n    // 需要缓存的页面 name\r\n    keepAlive: []\r\n  },\r\n  actions: {\r\n    /**\r\n     * @description 确认已经加载多标签页数据 https://github.com/d2-projects/d2-admin/issues/201\r\n     * @param {Object} context\r\n     */\r\n    isLoaded ({ state }) {\r\n      if (state.openedLoaded) return Promise.resolve()\r\n      return new Promise(resolve => {\r\n        const timer = setInterval(() => {\r\n          if (state.openedLoaded) resolve(clearInterval(timer))\r\n        }, 10)\r\n      })\r\n    },\r\n    /**\r\n     * @class opened\r\n     * @description 从持久化数据载入标签页列表\r\n     * @param {Object} context\r\n     */\r\n    async openedLoad ({ state, commit, dispatch }) {\r\n      // store 赋值\r\n      const value = await dispatch('d2admin/db/get', {\r\n        dbName: 'sys',\r\n        path: 'page.opened',\r\n        defaultValue: setting.page.opened,\r\n        user: true\r\n      }, { root: true })\r\n      // 在处理函数中进行数据优化 过滤掉现在已经失效的页签或者已经改变了信息的页签\r\n      // 以 fullPath 字段为准\r\n      // 如果页面过多的话可能需要优化算法\r\n      // valid 有效列表 1, 1, 0, 1 => 有效, 有效, 失效, 有效\r\n      const valid = []\r\n      // 处理数据\r\n      state.opened = value\r\n        .map(opened => {\r\n          // 忽略首页\r\n          if (opened.fullPath === '/index') {\r\n            valid.push(1)\r\n            return opened\r\n          }\r\n          // 尝试在所有的支持多标签页的页面里找到 name 匹配的页面\r\n          const find = state.pool.find(item => item.name === opened.name)\r\n          // 记录有效或无效信息\r\n          valid.push(find ? 1 : 0)\r\n          // 返回合并后的数据 新的覆盖旧的\r\n          // 新的数据中一般不会携带 params 和 query, 所以旧的参数会留存\r\n          return Object.assign({}, opened, find)\r\n        })\r\n        .filter((opened, index) => valid[index] === 1)\r\n      // 标记已经加载多标签页数据 https://github.com/d2-projects/d2-admin/issues/201\r\n      state.openedLoaded = true\r\n      // 根据 opened 数据生成缓存设置\r\n      commit('keepAliveRefresh')\r\n    },\r\n    /**\r\n     * 将 opened 属性赋值并持久化 在这之前请先确保已经更新了 state.opened\r\n     * @param {Object} context\r\n     */\r\n    async opened2db ({ state, dispatch }) {\r\n      // 设置数据\r\n      dispatch('d2admin/db/set', {\r\n        dbName: 'sys',\r\n        path: 'page.opened',\r\n        value: state.opened,\r\n        user: true\r\n      }, { root: true })\r\n    },\r\n    /**\r\n     * @class opened\r\n     * @description 更新页面列表上的某一项\r\n     * @param {Object} context\r\n     * @param {Object} payload { index, params, query, fullPath } 路由信息\r\n     */\r\n    async openedUpdate ({ state, commit, dispatch }, { index, params, query, fullPath }) {\r\n      // 更新页面列表某一项\r\n      const page = state.opened[index]\r\n      page.params = params || page.params\r\n      page.query = query || page.query\r\n      page.fullPath = fullPath || page.fullPath\r\n      state.opened.splice(index, 1, page)\r\n      // 持久化\r\n      await dispatch('opened2db')\r\n    },\r\n    /**\r\n     * @class opened\r\n     * @description 重排页面列表上的某一项\r\n     * @param {Object} context\r\n     * @param {Object} payload { oldIndex, newIndex } 位置信息\r\n     */\r\n    async openedSort ({ state, commit, dispatch }, { oldIndex, newIndex }) {\r\n      // 重排页面列表某一项\r\n      const page = state.opened[oldIndex]\r\n      state.opened.splice(oldIndex, 1)\r\n      state.opened.splice(newIndex, 0, page)\r\n      // 持久化\r\n      await dispatch('opened2db')\r\n    },\r\n    /**\r\n     * @class opened\r\n     * @description 新增一个 tag (打开一个页面)\r\n     * @param {Object} context\r\n     * @param {Object} payload new tag info\r\n     */\r\n    async add ({ state, commit, dispatch }, { tag, params, query, fullPath }) {\r\n      // 设置新的 tag 在新打开一个以前没打开过的页面时使用\r\n      const newTag = tag\r\n      newTag.params = params || newTag.params\r\n      newTag.query = query || newTag.query\r\n      newTag.fullPath = fullPath || newTag.fullPath\r\n      // 添加进当前显示的页面数组\r\n      state.opened.push(newTag)\r\n      // 如果这个页面需要缓存 将其添加到缓存设置\r\n      if (isKeepAlive(newTag)) commit('keepAlivePush', tag.name)\r\n      // 持久化\r\n      await dispatch('opened2db')\r\n    },\r\n    /**\r\n     * @class current\r\n     * @description 打开一个新的页面\r\n     * @param {Object} context\r\n     * @param {Object} payload 从路由钩子的 to 对象上获取 { name, params, query, fullPath, meta } 路由信息\r\n     */\r\n    async open ({ state, commit, dispatch }, { name, params, query, fullPath, meta }) {\r\n      // 已经打开的页面\r\n      const opened = state.opened\r\n      // 判断此页面是否已经打开 并且记录位置\r\n      let pageOpendIndex = 0\r\n      const pageOpend = opened.find((page, index) => {\r\n        const same = page.fullPath === fullPath\r\n        pageOpendIndex = same ? index : pageOpendIndex\r\n        return same\r\n      })\r\n      if (pageOpend) {\r\n        // 页面以前打开过\r\n        await dispatch('openedUpdate', {\r\n          index: pageOpendIndex,\r\n          params,\r\n          query,\r\n          fullPath\r\n        })\r\n      } else {\r\n        // 页面以前没有打开过\r\n        const page = state.pool.find(t => t.name === name)\r\n        // 如果这里没有找到 page 代表这个路由虽然在框架内 但是不参与标签页显示\r\n        if (page) {\r\n          await dispatch('add', {\r\n            tag: Object.assign({}, page),\r\n            params,\r\n            query,\r\n            fullPath\r\n          })\r\n        }\r\n      }\r\n      // 如果这个页面需要缓存 将其添加到缓存设置\r\n      if (isKeepAlive({ meta })) commit('keepAlivePush', name)\r\n      // 设置当前的页面\r\n      commit('currentSet', fullPath)\r\n    },\r\n    /**\r\n     * @class opened\r\n     * @description 关闭一个 tag (关闭一个页面)\r\n     * @param {Object} context\r\n     * @param {Object} payload { tagName: 要关闭的标签名字 }\r\n     */\r\n    async close ({ state, commit, dispatch }, { tagName }) {\r\n      // 预定下个新页面\r\n      let newPage = {}\r\n      const isCurrent = state.current === tagName\r\n      // 如果关闭的页面就是当前显示的页面\r\n      if (isCurrent) {\r\n        // 去找一个新的页面\r\n        const len = state.opened.length\r\n        for (let i = 0; i < len; i++) {\r\n          if (state.opened[i].fullPath === tagName) {\r\n            newPage = i < len - 1 ? state.opened[i + 1] : state.opened[i - 1]\r\n            break\r\n          }\r\n        }\r\n      }\r\n      // 找到这个页面在已经打开的数据里是第几个\r\n      const index = state.opened.findIndex(page => page.fullPath === tagName)\r\n      if (index >= 0) {\r\n        // 如果这个页面是缓存的页面 将其在缓存设置中删除\r\n        commit('keepAliveRemove', state.opened[index].name)\r\n        // 更新数据 删除关闭的页面\r\n        state.opened.splice(index, 1)\r\n      }\r\n      // 持久化\r\n      await dispatch('opened2db')\r\n      // 决定最后停留的页面\r\n      if (isCurrent) {\r\n        const { name = 'index', params = {}, query = {} } = newPage\r\n        const routerObj = { name, params, query }\r\n        await router.push(routerObj)\r\n      }\r\n    },\r\n    /**\r\n     * @class opened\r\n     * @description 关闭当前标签左边的标签\r\n     * @param {Object} context\r\n     * @param {Object} payload { pageSelect: 当前选中的tagName }\r\n     */\r\n    async closeLeft ({ state, commit, dispatch }, { pageSelect } = {}) {\r\n      const pageAim = pageSelect || state.current\r\n      let currentIndex = 0\r\n      state.opened.forEach((page, index) => {\r\n        if (page.fullPath === pageAim) currentIndex = index\r\n      })\r\n      if (currentIndex > 0) {\r\n        // 删除打开的页面 并在缓存设置中删除\r\n        for (let i = state.opened.length - 1; i >= 0; i--) {\r\n          if (state.opened[i].name === 'index' || i >= currentIndex) {\r\n            continue\r\n          }\r\n\r\n          commit('keepAliveRemove', state.opened[i].name)\r\n          state.opened.splice(i, 1)\r\n        }\r\n      }\r\n      // 持久化\r\n      await dispatch('opened2db')\r\n      // 设置当前的页面\r\n      state.current = pageAim\r\n      if (router.app.$route.fullPath !== pageAim) await router.push(pageAim)\r\n    },\r\n    /**\r\n     * @class opened\r\n     * @description 关闭当前标签右边的标签\r\n     * @param {Object} context\r\n     * @param {Object} payload { pageSelect: 当前选中的tagName }\r\n     */\r\n    async closeRight ({ state, commit, dispatch }, { pageSelect } = {}) {\r\n      const pageAim = pageSelect || state.current\r\n      let currentIndex = 0\r\n      state.opened.forEach((page, index) => {\r\n        if (page.fullPath === pageAim) currentIndex = index\r\n      })\r\n      // 删除打开的页面 并在缓存设置中删除\r\n      for (let i = state.opened.length - 1; i >= 0; i--) {\r\n        if (state.opened[i].name === 'index' || currentIndex >= i) {\r\n          continue\r\n        }\r\n\r\n        commit('keepAliveRemove', state.opened[i].name)\r\n        state.opened.splice(i, 1)\r\n      }\r\n      // 持久化\r\n      await dispatch('opened2db')\r\n      // 设置当前的页面\r\n      state.current = pageAim\r\n      if (router.app.$route.fullPath !== pageAim) await router.push(pageAim)\r\n    },\r\n    /**\r\n     * @class opened\r\n     * @description 关闭当前激活之外的 tag\r\n     * @param {Object} context\r\n     * @param {Object} payload { pageSelect: 当前选中的tagName }\r\n     */\r\n    async closeOther ({ state, commit, dispatch }, { pageSelect } = {}) {\r\n      const pageAim = pageSelect || state.current\r\n      let currentIndex = 0\r\n      state.opened.forEach((page, index) => {\r\n        if (page.fullPath === pageAim) currentIndex = index\r\n      })\r\n      // 删除打开的页面数据 并更新缓存设置\r\n      for (let i = state.opened.length - 1; i >= 0; i--) {\r\n        if (state.opened[i].name === 'index' || currentIndex === i) {\r\n          continue\r\n        }\r\n\r\n        commit('keepAliveRemove', state.opened[i].name)\r\n        state.opened.splice(i, 1)\r\n      }\r\n      // 持久化\r\n      await dispatch('opened2db')\r\n      // 设置新的页面\r\n      state.current = pageAim\r\n      if (router.app.$route.fullPath !== pageAim) await router.push(pageAim)\r\n    },\r\n    /**\r\n     * @class opened\r\n     * @description 关闭所有 tag\r\n     * @param {Object} context\r\n     */\r\n    async closeAll ({ state, commit, dispatch }) {\r\n      // 删除打开的页面 并在缓存设置中删除\r\n      for (let i = state.opened.length - 1; i >= 0; i--) {\r\n        if (state.opened[i].name === 'index') {\r\n          continue\r\n        }\r\n\r\n        commit('keepAliveRemove', state.opened[i].name)\r\n        state.opened.splice(i, 1)\r\n      }\r\n      // 持久化\r\n      await dispatch('opened2db')\r\n      // 关闭所有的标签页后需要判断一次现在是不是在首页\r\n      if (router.app.$route.name !== 'index') {\r\n        await router.push({ name: 'index' })\r\n      }\r\n    }\r\n  },\r\n  mutations: {\r\n    /**\r\n     * @class keepAlive\r\n     * @description 从已经打开的页面记录中更新需要缓存的页面记录\r\n     * @param {Object} state state\r\n     */\r\n    keepAliveRefresh (state) {\r\n      state.keepAlive = state.opened.filter(item => isKeepAlive(item)).map(e => e.name)\r\n    },\r\n    /**\r\n     * @description 删除一个页面的缓存设置\r\n     * @param {Object} state state\r\n     * @param {String} name name\r\n     */\r\n    keepAliveRemove (state, name) {\r\n      const list = cloneDeep(state.keepAlive)\r\n      const index = list.findIndex(item => item === name)\r\n      if (index !== -1) {\r\n        list.splice(index, 1)\r\n        state.keepAlive = list\r\n      }\r\n    },\r\n    /**\r\n     * @description 增加一个页面的缓存设置\r\n     * @param {Object} state state\r\n     * @param {String} name name\r\n     */\r\n    keepAlivePush (state, name) {\r\n      const keep = cloneDeep(state.keepAlive)\r\n      keep.push(name)\r\n      state.keepAlive = uniq(keep)\r\n    },\r\n    /**\r\n     * @description 清空页面缓存设置\r\n     * @param {Object} state state\r\n     */\r\n    keepAliveClean (state) {\r\n      state.keepAlive = []\r\n    },\r\n    /**\r\n     * @class current\r\n     * @description 设置当前激活的页面 fullPath\r\n     * @param {Object} state state\r\n     * @param {String} fullPath new fullPath\r\n     */\r\n    currentSet (state, fullPath) {\r\n      state.current = fullPath\r\n    },\r\n    /**\r\n     * @class pool\r\n     * @description 保存 pool (候选池)\r\n     * @param {Object} state state\r\n     * @param {Array} routes routes\r\n     */\r\n    init (state, routes) {\r\n      const pool = []\r\n      const push = function (routes) {\r\n        routes.forEach(route => {\r\n          if (route.children && route.children.length > 0) {\r\n            push(route.children)\r\n          } else {\r\n            if (!route.hidden) {\r\n              const { meta, name, path } = route\r\n              pool.push({ meta, name, path })\r\n            }\r\n          }\r\n        })\r\n      }\r\n      push(routes)\r\n      state.pool = pool\r\n    }\r\n  }\r\n}\r\n"]}]}